// src/utils/authErrorHandler.ts - MANEJADOR DE ERRORES DE AUTENTICACI√ìN AMIGABLES

/**
 * Interfaz para definir un error de autenticaci√≥n personalizado
 */
export interface AuthError {
  title: string;       // T√≠tulo del error para mostrar en Alert
  message: string;     // Mensaje descriptivo y amigable
  type: string;        // Tipo de error para manejo program√°tico
  showSupport: boolean; // Si debe mostrar opci√≥n de contactar soporte
}

/**
 * Mapea los c√≥digos de error de Firebase a mensajes amigables en espa√±ol
 * @param firebaseErrorCode - C√≥digo de error de Firebase
 * @param errorMessage - Mensaje original del error
 * @returns AuthError - Objeto con informaci√≥n del error formateada
 */
export const getAuthError = (firebaseErrorCode: string, errorMessage?: string): AuthError => {
  
  // === ERRORES DE FIREBASE AUTH ===
  switch (firebaseErrorCode) {
    
    // ‚ùå Usuario no encontrado
    case 'auth/user-not-found':
      return {
        title: 'Usuario no encontrado',
        message: 'No existe una cuenta registrada con este correo electr√≥nico.\n\n¬øEst√°s seguro de que el email es correcto?',
        type: 'user_not_found',
        showSupport: false
      };
    
    // ‚ùå Contrase√±a incorrecta  
    case 'auth/wrong-password':
      return {
        title: 'Contrase√±a incorrecta',
        message: 'La contrase√±a que ingresaste no es correcta.\n\n¬øOlvidaste tu contrase√±a? Contacta a soporte para restablecerla.',
        type: 'wrong_password',
        showSupport: true
      };
    
    // ‚ùå Email con formato inv√°lido
    case 'auth/invalid-email':
      return {
        title: 'Email inv√°lido',
        message: 'El formato del correo electr√≥nico no es v√°lido.\n\nPor favor, verifica que hayas escrito correctamente tu email.',
        type: 'invalid_email',
        showSupport: false
      };
    
    // ‚ùå Demasiados intentos fallidos
    case 'auth/too-many-requests':
      return {
        title: 'Demasiados intentos',
        message: 'Se han realizado demasiados intentos de inicio de sesi√≥n fallidos.\n\nPor favor, espera unos minutos antes de intentar nuevamente.',
        type: 'too_many_requests',
        showSupport: false
      };
    
    // ‚ùå Credenciales inv√°lidas (nuevo error com√∫n de Firebase v9+)
    case 'auth/invalid-credential':
      return {
        title: 'Credenciales incorrectas',
        message: 'El email o la contrase√±a son incorrectos.\n\nPor favor, verifica tus datos e intenta nuevamente.',
        type: 'invalid_credentials',
        showSupport: true
      };
    
    // ‚ùå Usuario deshabilitado
    case 'auth/user-disabled':
      return {
        title: 'Cuenta deshabilitada',
        message: 'Tu cuenta ha sido deshabilitada por un administrador.\n\nContacta a soporte para m√°s informaci√≥n.',
        type: 'user_disabled',
        showSupport: true
      };
    
    // ‚ùå Red o conexi√≥n
    case 'auth/network-request-failed':
      return {
        title: 'Error de conexi√≥n',
        message: 'No se pudo conectar con el servidor.\n\nVerifica tu conexi√≥n a internet e intenta nuevamente.',
        type: 'network_error',
        showSupport: false
      };
    
    // ‚ùå Operaci√≥n no permitida
    case 'auth/operation-not-allowed':
      return {
        title: 'Operaci√≥n no permitida',
        message: 'El inicio de sesi√≥n con email/contrase√±a no est√° habilitado.\n\nContacta al administrador del sistema.',
        type: 'operation_not_allowed',
        showSupport: true
      };
    
    // ‚ùå Contrase√±a muy d√©bil
    case 'auth/weak-password':
      return {
        title: 'Contrase√±a muy d√©bil',
        message: 'La contrase√±a debe tener al menos 6 caracteres.\n\nPor favor, elige una contrase√±a m√°s segura.',
        type: 'weak_password',
        showSupport: false
      };
    
    // ‚ùå Email ya en uso
    case 'auth/email-already-in-use':
      return {
        title: 'Email ya registrado',
        message: 'Ya existe una cuenta con este correo electr√≥nico.\n\n¬øQuieres intentar iniciar sesi√≥n en su lugar?',
        type: 'email_in_use',
        showSupport: false
      };
    
    // === ERRORES PERSONALIZADOS DEL SISTEMA ===
    default:
      // Analizar errores personalizados por mensaje
      const message = errorMessage?.toLowerCase() || '';
      
      // üö´ Usuario inactivo
      if (message.includes('usuario inactivo') || message.includes('contacte a soporte')) {
        return {
          title: 'Usuario deshabilitado',
          message: 'Tu cuenta de usuario ha sido desactivada.\n\nüìß Contacta a info@hisma.com.ar para reactivarla.',
          type: 'usuario_inactivo',
          showSupport: true
        };
      }
      
      // üè™ Lubricentro desactivado
      if (message.includes('lubricentro') && (message.includes('desactivado') || message.includes('inactivo'))) {
        return {
          title: 'Lubricentro inactivo',
          message: 'El lubricentro al que perteneces est√° desactivado.\n\nüìß Contacta a info@hisma.com.ar para m√°s informaci√≥n.',
          type: 'lubricentro_inactivo',
          showSupport: true
        };
      }
      
      // ‚è∞ Per√≠odo de prueba finalizado
      if (message.includes('per√≠odo de prueba') || message.includes('trial')) {
        return {
          title: 'Per√≠odo de prueba finalizado',
          message: 'El per√≠odo de prueba gratuito ha expirado.\n\nüìß Contacta a info@hisma.com.ar para activar tu cuenta.',
          type: 'periodo_prueba_finalizado',
          showSupport: true
        };
      }
      
      // üîç Lubricentro no encontrado
      if (message.includes('lubricentro no encontrado') || message.includes('configuraci√≥n')) {
        return {
          title: 'Error de configuraci√≥n',
          message: 'No se pudo encontrar la informaci√≥n del lubricentro.\n\nüìß Contacta a info@hisma.com.ar para resolver este problema.',
          type: 'lubricentro_no_encontrado',
          showSupport: true
        };
      }
      
      // üåê Error de red/carga de datos
      if (message.includes('cargar datos') || message.includes('network') || message.includes('timeout')) {
        return {
          title: 'Error de conexi√≥n',
          message: 'No se pudieron cargar los datos del servidor.\n\nVerifica tu conexi√≥n a internet e intenta nuevamente.',
          type: 'network_error',
          showSupport: false
        };
      }
      
      // ‚ùì Error gen√©rico - mostrar mensaje original si es comprensible
      return {
        title: 'Error de autenticaci√≥n',
        message: errorMessage && errorMessage.length < 200 
          ? `${errorMessage}\n\nSi el problema persiste, contacta a soporte.`
          : 'Ocurri√≥ un error inesperado al iniciar sesi√≥n.\n\nPor favor, intenta nuevamente o contacta a soporte si el problema persiste.',
        type: 'error_general',
        showSupport: true
      };
  }
};

/**
 * Determina si un error debe redirigir a la pantalla de soporte
 * @param errorType - Tipo de error retornado por getAuthError
 * @returns boolean - true si debe redirigir a soporte
 */
export const shouldRedirectToSupport = (errorType: string): boolean => {
  const supportRedirectTypes = [
    'usuario_inactivo',
    'lubricentro_inactivo', 
    'periodo_prueba_finalizado',
    'lubricentro_no_encontrado',
    'user_disabled'
  ];
  
  return supportRedirectTypes.includes(errorType);
};

/**
 * Obtiene el texto del bot√≥n de soporte seg√∫n el tipo de error
 * @param errorType - Tipo de error
 * @returns string - Texto del bot√≥n
 */
export const getSupportButtonText = (errorType: string): string => {
  switch (errorType) {
    case 'usuario_inactivo':
    case 'user_disabled':
      return 'Contactar para reactivar cuenta';
    
    case 'lubricentro_inactivo':
      return 'Contactar sobre lubricentro';
    
    case 'periodo_prueba_finalizado':
      return 'Activar cuenta completa';
    
    case 'wrong_password':
    case 'invalid_credentials':
      return 'Recuperar contrase√±a';
    
    default:
      return 'Contactar soporte';
  }
};

/**
 * Obtiene consejos adicionales para mostrar al usuario seg√∫n el tipo de error
 * @param errorType - Tipo de error
 * @returns string[] - Array de consejos o array vac√≠o
 */
export const getErrorTips = (errorType: string): string[] => {
  switch (errorType) {
    case 'invalid_email':
      return [
        '‚Ä¢ Verifica que no hayan espacios extra',
        '‚Ä¢ Aseg√∫rate de incluir @ y un dominio v√°lido',
        '‚Ä¢ Ejemplo: usuario@ejemplo.com'
      ];
    
    case 'wrong_password':
    case 'invalid_credentials':
      return [
        '‚Ä¢ Verifica que no est√© activado Caps Lock',
        '‚Ä¢ Las contrase√±as distinguen may√∫sculas y min√∫sculas',
        '‚Ä¢ Intenta escribir la contrase√±a en un editor de texto primero'
      ];
    
    case 'network_error':
      return [
        '‚Ä¢ Verifica tu conexi√≥n WiFi o datos m√≥viles',
        '‚Ä¢ Intenta cerrar y abrir la aplicaci√≥n',
        '‚Ä¢ Si usas WiFi corporativo, puede haber restricciones'
      ];
    
    default:
      return [];
  }
};